{
  "comments": [
    {
      "key": {
        "uuid": "8a467883_0b3f1188",
        "filename": "src/ArrayPractice.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1011462
      },
      "writtenOn": "2017-07-18T15:00:14Z",
      "side": 1,
      "message": "This algorithm takes O(n^2) time, please explain why it takes O(n^2) time and see if you can think of a way to do this in O(n) time. Give some thoughts first before I give some hints",
      "range": {
        "startLine": 108,
        "startChar": 14,
        "endLine": 109,
        "endChar": 54
      },
      "revId": "9d465547da3fb334198055167f4bf724ebeddcaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84e86e38_c4d4d9d4",
        "filename": "src/ArrayPractice.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1011514
      },
      "writtenOn": "2017-07-19T06:51:07Z",
      "side": 1,
      "message": "to my understanding, if the time it takes for 1 for-loop of the length n is O(n) then if there is a nested loop with the same length of n, the time it takes for both loops is O(n^2) due to for each existed element, the program will have to run the same amount of time, which is n x n.\n\nThe other way I could think of is using subtraction.\n* Sort values\n* Element - values[0] \u003d result;\n* Search for result in values.\n* Store values[0] and result;\n* Repeat Step 2 for next values UNTIL reach end of value or values[i] \u003e element.",
      "parentUuid": "8a467883_0b3f1188",
      "range": {
        "startLine": 108,
        "startChar": 14,
        "endLine": 109,
        "endChar": 54
      },
      "revId": "9d465547da3fb334198055167f4bf724ebeddcaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42d1a6bc_ff7df9eb",
        "filename": "src/ArrayPractice.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1011462
      },
      "writtenOn": "2017-07-19T23:23:29Z",
      "side": 1,
      "message": "OK, that\u0027s not bad and that algorithm takes O(n logn) time, please explain why it takes O(nlogn) time, if you think further, it could get to O(n) time.",
      "parentUuid": "84e86e38_c4d4d9d4",
      "range": {
        "startLine": 108,
        "startChar": 14,
        "endLine": 109,
        "endChar": 54
      },
      "revId": "9d465547da3fb334198055167f4bf724ebeddcaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06846bda_7ce797f5",
        "filename": "src/ArrayPractice.java",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1011462
      },
      "writtenOn": "2017-07-19T23:43:49Z",
      "side": 1,
      "message": "Also, write your implementation for your proposed approach first. Later on, we can change to a more efficient one.",
      "parentUuid": "42d1a6bc_ff7df9eb",
      "range": {
        "startLine": 108,
        "startChar": 14,
        "endLine": 109,
        "endChar": 54
      },
      "revId": "9d465547da3fb334198055167f4bf724ebeddcaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}